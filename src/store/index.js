import Vue from 'vue'
import Vuex from 'vuex'

import { getLocalStorage } from '../utils/storage'

Vue.use(Vuex)

export default new Vuex.Store({
    state: {
        first_start: getLocalStorage('first_start') ?? true,
        GEO: {
            location: {
                lat: null,
                lng: null,
            },
            heading: null,
            bearing: null,
            distance: null,
        },
        // TODO: –≤—ã–ø–∏–ª–∏—Ç—å
        destination: {
            lat: 59.261324, 
            lng: 18.038692
        },
        current_level: getLocalStorage('current_level') ?? 0,
        is_finale: getLocalStorage('is_finale') ?? false,
        is_map_shown: false,
        is_early_response: false,
        log: [],
        levels: [
            {
                id: 1,
                location: {
                    lat: 59.2596354,
                    lng: 18.0411742
                },
                clue_text: '–≠—Ç–æ —Ä–∞–∑–º–∏–Ω–æ—á–∫–∞, –≥—É–ª—è–π, –¥—ã—à–∏ –≤–æ–∑–¥—É—Ö–æ–º, –∞ —É—Ö–º—ã–ª—è—é—â–∏–µ—Å—è –≥–æ–ª–æ–≤—ã –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ',
                describe_text: '–ú–∞–º–∞ –ø–ª–æ—Ö–æ–≥–æ –Ω–µ –∑–∞–≥–∞–¥–∞–µ—Ç',
                success_text: '–û—Ç–ª–∏—á–Ω–æ, —Å—É—Ç—å —Ç—ã –ø–æ–Ω—è–ª–∞, –¥–∞–≤–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!',
                answers: [
                    ['–¥–∞–º–±–ª–¥–æ—Ä', '–¥–∞–º–±–ª–ª–¥–æ—Ä', '–∞–ª—å–±—É—Å –¥–∞–º–±–ª–¥–æ—Ä', 'dumbledore']
                ]
            },
            {
                id: 2,
                location: {
                    lat: 59.2569192, 
                    lng: 18.0409060
                },
                clue_text: '–ù—É —ç—Ç–æ –Ω–µ–º–Ω–æ–≥–æ –Ω–∞ –æ—Ç—à–∏–±–µ, –Ω–æ –Ω–∏—á–µ–≥–æ, —Ç—ã –Ω–∞–π–¥–µ—à—å',
                describe_text: '–ù—É –¥–∞–≤–∞–π –∑–Ω–∞—Ç–æ–∫, –ø–æ–¥–Ω–∞—Ç—É—É—É–∂—Å—è',
                success_text: '–•–æ—á—É —É–∑–Ω–∞—Ç—å —ç—Ç—É –∏—Å—Ç–æ—Ä–∏—é',
                answers: [
                    ['–¥–∏–∞—Ä–µ—è', '–¥–µ–∞—Ä–µ—è', '–¥–µ–∞—Ä—Ä–µ—è', '–¥–∏–∞—Ä—Ä–µ—è']
                ]
            },
            {
                id: 3,
                location: {
                    lat: 59.2502633,
                    lng: 18.0415034
                },
                clue_text: '–¢—É—Ç —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç —Å–ª–∞–≤—è–Ω—Å–∫–∞—è –±—Ä–∞—Ç–≤–∞',
                describe_text: '–ê —Ç–µ–ø–µ—Ä—å, –≤–Ω–∏–º–∞–Ω–∏–µ, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç',
                success_text: 'üí©üëç',
                answers: [
                    ['–∫–∞–∫–∞—à–∫–∞', '–∫–∞–∫–∞—Ö–∞', '–≥–æ–≤–Ω—è—à–∫–∞', '–≥–æ–≤—è—à–∫–∞']
                ]
            },
            {
                id: 4,
                location: {
                    lat: 59.2534180,
                    lng: 18.0402870
                },
                clue_text: '–•–∏–∂–∏–Ω–∞ –≤ –ª–µ—Å—É, –ª–µ–≥–∫–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å',
                describe_text: '–ù—É —Ç—É—Ç —è –Ω–µ –ø–æ–¥—Å–∫–∞–∂—É',
                success_text: '–≠—Ç–æ –º–æ—è –∂–µ–Ω–∞ –∏–ª–∏ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –î—Ä—É–∑—å?',
                answers: [
                    ['—è–π—Ü–æ', '—è–∏—Ü–æ', '—è–∏—á–∫–æ']
                ]
            },
            {
                id: 5,
                location: {
                    lat: 59.2539619, 
                    lng: 18.0474532
                },
                clue_text: '–£ —Ç–µ–±—è –æ—Ç–ª–∏—á–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –∏–¥–∏ –¥–∞–ª—å—à–µ',
                describe_text: '–û–≥–æ, —Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, —ç—Ç–æ –∑–∞–∫–æ–Ω–Ω–æ?',
                success_text: '–ú–æ–µ –ø–æ—á—Ç–µ–Ω–∏–µ! –ß—Ç–æ —Ç–≤–æ—Ä–∏—Ç —ç—Ç–æ—Ç –∑–Ω–∞—Ç–æ–∫!',
                answers: [
                    ['–≥—Ä–∞–≤–∏—Ç–∏ —Ñ–æ–ª–ª–∑', '–≥—Ä–∞–≤–∏—Ç–∏—Ñ–æ–ª–ª–∑', '–≥—Ä–∞–≤–∏—Ç–∏—Ñ–æ–ª–ª—Å', '–≥—Ä–∞–≤–∏—Ç–∏ —Ñ–æ–ª–∑', '–≥—Ä–∞–≤–∏—Ç–∏ —Ñ–æ–ª—Å', 'gravity falls'],
                    ['—á–∏–ø—Å–µ–∫–∏', '—á–∏–ø—Å–∏–∫–∏', '—á–∏–ø—Å–µ–∫–µ', '—á–∏–ø—Å—ã'],
                    ['lamp', '–ª–∞–º–ø', '–ª–∞–º–ø–∞']
                ]
            },
            {
                id: 6,
                location: {
                    lat: 59.2561419, 
                    lng: 18.0466791
                },
                clue_text: '–ê–∫–∫—É—Ä–∞—Ç–Ω–µ–µ —Ç–∞–º ‚ö°',
                describe_text: '–ú–Ω–µ —Å–∫–∞–∑–∞–ª–∏ —á—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç',
                success_text: '–û—Ç–ª–∏—á–Ω–∞—è –ø–∞–º—è—Ç—å, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!',
                answers: [
                    ['23', '–¥–≤–∞–¥—Ü–∞—Ç—å —Ç—Ä–∏', '–¥–≤–∞—Ü–∞—Ç—å —Ç—Ä–∏', '–¥–≤–∞–¥—Ü–∞—Ç—å—Ç—Ä–∏']
                ]
            },
            {
                id: 7,
                location: {
                    lat: 59.2550083, 
                    lng: 18.0499286
                },
                clue_text: '–¢–∞–º —Ç–æ–∂–µ ‚ö°',
                describe_text: '–ß–µ–º —ç—Ç–æ –≤—ã —Ç–∞–º —Ç–∞–∫–∏–º –∑–∞–Ω–∏–º–∞–ª–∏—Å—å? –ê?',
                success_text: '–ù–∞–¥–µ—é—Å—å —ç—Ç–æ –º–∞–ª–µ–Ω—å–∫–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–ø–æ–º–Ω–∏–ª–æ —Ç–µ –ø–æ—Ö–æ–¥—ã –∑–∞ –∫–ª–∞–¥–æ–º',
                answers: [
                    ['–±–∞—Ä–∞–∫ –æ–±–∞–º–∞', '–æ–±–∞–º–∞ –±–∞—Ä–∞–∫']
                ]
            },
            {
                id: 8,
                location: {
                    lat: 59.2524418,  
                    lng: 18.0608267
                },
                clue_text: '–û—Ç–¥–æ—Ö–Ω–µ—à—å —Ç–∞–º –Ω–µ–º–Ω–æ–≥–æ –∏ –¥–∞–ª—å—à–µ –≤ –±–æ–π',
                describe_text: 'üò¨ –Ω—É –∫—Ç–æ –±—ã —Å–æ–º–Ω–µ–≤–∞–ª—Å—è',
                success_text: '–•–æ—á–µ—Ç—Å—è —Å–ø–∞—Ç—å. –ù–æ –µ—â–µ –Ω–µ –≤—Ä–µ–º—è.',
                answers: [
                    ['–ø—É–∫', '–ø—É—É–∫', 'puk']
                ]
            },
            {
                id: 9,
                location: {
                    lat: 59.2553547,  
                    lng: 18.0650901
                },
                clue_text: '–≠—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏–π –∑–∞ –∑–≤–µ–∑–¥–∞–º–∏, –∏—â–∏ —Ö–æ—Ä–æ—à–µ–Ω—å–∫–æ!',
                describe_text: '–ù–∞—à–ª–∞ —á—Ç–æ-—Ç–æ? –ê —Ç–µ–ø–µ—Ä—å –≤—Å–ø–æ–º–∏–Ω–∞–π',
                success_text: '–ñ–µ–Ω—è - –ø—Ä–∏—Ä–æ–∂–¥–µ–Ω–Ω—ã–π —Ä–∞—Å–∫–∞–∑—á–∏–∫)',
                answers: [
                    ['–≤–æ–¥–∫–∞', '–≤–æ–¥—è—Ä–∞', '–≤–æ–¥–æ—á–∫–∞']
                ]
            },
            {
                id: 10,
                location: {
                    lat: 59.2591946,  
                    lng: 18.0421240
                },
                clue_text: '–ü—É—Ç—å —Ç–µ–±–µ –ø–æ–∫–∞–∂—É—Ç —á–µ—Ä–Ω—ã–µ —à–∞—Ä–∏–∫–∏',
                describe_text: '–û—Ç–ª–∏—á–Ω—ã–π –≤–∏–¥, –Ω–µ –ø—Ä–∞–≤–¥–∞ –ª–∏?',
                success_text: '–ù—É –≤—Å–µ, —Ç–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å',
                answers: [
                    ['–ø–µ–Ω–æ–ø–ª–∞—Å—Ç', '–ø–µ–Ω–∞–ø–ª–∞—Å—Ç', '–ø–µ–Ω–Ω–æ–ø–ª–∞—Å—Ç', '–ø–µ–Ω–Ω–∞–ø–ª–∞—Å—Ç']
                ]
            }
        ]
    },

    mutations: {
        SET_FIRST_START(state, first_start) {
            state.first_start = first_start;
        },
        SET_GEO(state, GEO) {
            state.GEO = GEO;
        },
        SET_IS_MAP_SHOWN(state, is_map_shown) {
            state.is_map_shown = is_map_shown;
        },
        SET_IS_EARLY_RESPONSE(state, is_early_response) {
            state.is_early_response = is_early_response;
        },
        // TODO: –≤—ã–ø–∏–ª–∏—Ç—å
        SET_DESTINATION(state, destination) {
            state.destination = destination;
        },
        SET_CURRENT_LEVEL(state, level) {
            state.current_level = level;
        },
        SET_LOG(state, log) {
            state.log.push(log);
        },
        SET_IS_FINALE(state, is_finale) {
            state.is_finale = is_finale;
        }
    },

    actions: {
        SET_FIRST_START({ commit }, first_start) {
            commit('SET_FIRST_START', first_start);
        },
        SET_GEO({ commit }, GEO) {
            commit('SET_GEO', GEO);
        },
        SET_IS_MAP_SHOWN({ commit }, is_map_shown) {
            commit('SET_IS_MAP_SHOWN', is_map_shown);
        },
        SET_IS_EARLY_RESPONSE({ commit }, is_early_response) {
            commit('SET_IS_EARLY_RESPONSE', is_early_response);
        },
        // TODO: –≤—ã–ø–∏–ª–∏—Ç—å
        SET_DESTINATION({ commit }, destination) {
            commit('SET_DESTINATION', destination);
        },
        SET_CURRENT_LEVEL({ commit }, level) {
            commit('SET_CURRENT_LEVEL', level);
        },
        SET_LOG({ commit }, log) {
            commit('SET_LOG', log);
        },
        SET_IS_FINALE({ commit }, is_finale) {
            commit('SET_IS_FINALE', is_finale);
        }
    }
});
